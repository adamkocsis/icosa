[{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://adamkocsis.github.io/icosa/articles/icosa_2_essentials.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"2. Essentials","text":"?","code":""},{"path":"https://adamkocsis.github.io/icosa/articles/icosa_2_essentials.html","id":"creating-a-grid","dir":"Articles","previous_headings":"","what":"Creating a grid","title":"2. Essentials","text":"showing grid hexagrid plotting 2d-version sf world map","code":""},{"path":"https://adamkocsis.github.io/icosa/articles/icosa_2_essentials.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example data","title":"2. Essentials","text":"load data package locating data tabulating data plotting data: occupancy density","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://adamkocsis.github.io/icosa/articles/icosa_6_grid_bound_data.html","id":"plotting","dir":"Articles","previous_headings":"","what":"Plotting","title":"6. Grid-bound data","text":"idea","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://adamkocsis.github.io/icosa/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adam T. Kocsis. Author, maintainer.","code":""},{"path":"https://adamkocsis.github.io/icosa/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kocsis (2023). icosa: Global Triangular Penta-Hexagonal Grids Based Tessellated Icosahedra. R package version 0.10.1.","code":"@Manual{,   title = {icosa: Global Triangular and Penta-Hexagonal Grids Based on Tessellated Icosahedra},   author = {Adam T. Kocsis},   year = {2023},   note = {R package version 0.10.1}, }"},{"path":[]},{"path":"https://adamkocsis.github.io/icosa/index.html","id":"triangular-and-penta-hexagonal-grids-based-on-tessellated-icosahedra","dir":"","previous_headings":"","what":"Triangular and Penta-Hexagonal Grids Based on Tessellated Icosahedra","title":"Global Triangular and Penta-Hexagonal Grids Based on Tessellated\n    Icosahedra","text":"Employs triangular tessellation refine icosahedra defined 3d space. procedures can set provide grid custom resolution. primary triangular inverted penta-hexagonal grids available implementation. Additional functions provided position points (latitude-longitude data) grids, allow 2D 3D plotting, use raster data shapefiles.","code":""},{"path":[]},{"path":[]},{"path":"https://adamkocsis.github.io/icosa/index.html","id":"history","dir":"","previous_headings":"Notes","what":"History","title":"Global Triangular and Penta-Hexagonal Grids Based on Tessellated\n    Icosahedra","text":"beta version, like R, comes absolutely warranty.","code":""},{"path":[]},{"path":"https://adamkocsis.github.io/icosa/reference/CarToPol.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion of 3d Cartesian coordinates to polar coordinates — CarToPol","title":"Conversion of 3d Cartesian coordinates to polar coordinates — CarToPol","text":"function uses basic trigonometric relationships transform XYZ coordinates polar coordinates","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/CarToPol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion of 3d Cartesian coordinates to polar coordinates — CarToPol","text":"","code":"CarToPol(x, ...)  # S4 method for matrix CarToPol(x, norad = FALSE, origin = c(0, 0, 0))  # S4 method for numeric CarToPol(x, norad = FALSE, origin = c(0, 0, 0))  # S4 method for data.frame CarToPol(x, norad = FALSE, origin = c(0, 0, 0))"},{"path":"https://adamkocsis.github.io/icosa/reference/CarToPol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion of 3d Cartesian coordinates to polar coordinates — CarToPol","text":"x (matrix, data.frame, numeric) 3 column data matrix XYZ coordinates Cartesian space. ... Arguments passed class-specific methods. norad (logical). Toggles whether rho coordinate (distance origin) omitted output. origin (numeric) Vector length 3, XYZ coordinates sphere center.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/CarToPol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion of 3d Cartesian coordinates to polar coordinates — CarToPol","text":"3-column 2-column numeric, matrix data.frame longitude, latitude , set accordingly, radius data.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/CarToPol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion of 3d Cartesian coordinates to polar coordinates — CarToPol","text":"","code":"# some random points xyz <- rbind(   c(6371, 0,0),   c(0, 6371,0),   c(1000,1000,1000) )  # conversions   CarToPol(xyz) #>      long      lat      rho #> [1,]    0  0.00000 6371.000 #> [2,]   90  0.00000 6371.000 #> [3,]   45 35.26439 1732.051"},{"path":"https://adamkocsis.github.io/icosa/reference/PolToCar.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion of polar coordinates to 3d Cartesian coordinates — PolToCar","title":"Conversion of polar coordinates to 3d Cartesian coordinates — PolToCar","text":"function uses basic trigonometric relationships transform longitude/latitude coordinates sphere xyz Cartesian coordinates.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/PolToCar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion of polar coordinates to 3d Cartesian coordinates — PolToCar","text":"","code":"PolToCar(x, ...)  # S4 method for matrix PolToCar(x, radius = authRadius, origin = c(0, 0, 0))  # S4 method for numeric PolToCar(x, radius = authRadius, origin = c(0, 0, 0))  # S4 method for data.frame PolToCar(x, radius = authRadius, origin = c(0, 0, 0), long = NULL, lat = NULL)"},{"path":"https://adamkocsis.github.io/icosa/reference/PolToCar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion of polar coordinates to 3d Cartesian coordinates — PolToCar","text":"x (matrix, numeric, data.frame) 2-column numeric matrix longitude/latitude data. ... Arguments passed class-specific methods. radius (numeric) radius sphere. Defaults R2 radius Earth (6371.007km). origin (numeric) Vector length 3, XYZ coordinates sphere center. long (character) x data.frame, column used longitudes. lat (character) x data.frame, column used latitudes.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/PolToCar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion of polar coordinates to 3d Cartesian coordinates — PolToCar","text":"xyz 3-column numeric matrix, data.frame numeric, depending class x.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/PolToCar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conversion of polar coordinates to 3d Cartesian coordinates — PolToCar","text":"authalic mean radius Earth (6371.007 km) used function default. origin c(0,0,0). precision conversions exact (see example c(0,90) ), considered acceptable applied reasonable scale (e.g. global analyses using data 10e-6 meters resolution).","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/PolToCar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion of polar coordinates to 3d Cartesian coordinates — PolToCar","text":"","code":"longLat <- rbind(   c(0,0),   #note the precision here!   c(0, 90),   c(-45,12) ) # matrix-method xyz <- PolToCar(longLat) # numeric-method xyz2 <- PolToCar(longLat[1,]) # data.frame method xyz3 <- PolToCar(as.data.frame(longLat))"},{"path":"https://adamkocsis.github.io/icosa/reference/SpLines.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a SpatialLines class object from an icosahedral grid — SpLines","title":"Create a SpatialLines class object from an icosahedral grid — SpLines","text":"Create SpatialLines class object icosahedral grid","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/SpLines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a SpatialLines class object from an icosahedral grid — SpLines","text":"","code":"SpLines(gridObj, ...)  # S4 method for trigrid SpLines(gridObj, dateLine = \"break\", res = NULL)"},{"path":"https://adamkocsis.github.io/icosa/reference/SpLines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a SpatialLines class object from an icosahedral grid — SpLines","text":"gridObj (trigrid hexagrid) Icosahedral grid object. ... Specific details new SpatialLines object. dateLine (logical)Specifies whether NAs introduced dateline break boundaries faces.  Can switched setting FALSE. res (numeric) number points inserted two vertices, NULL, set package. default method increases resolution wiht lower tessellation values, higher higher absolute latitudes.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/SpLines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a SpatialLines class object from an icosahedral grid — SpLines","text":"object class SpatialLines.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/SpPolygons.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial polygons from an icosahedral grid — SpPolygons","title":"Spatial polygons from an icosahedral grid — SpPolygons","text":"function create SpatialPolygons class 2d representation icosahedral grid.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/SpPolygons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial polygons from an icosahedral grid — SpPolygons","text":"","code":"SpPolygons(gridObj, ...)  # S4 method for trigrid SpPolygons(gridObj, res = NULL)  # S4 method for hexagrid SpPolygons(gridObj, res = NULL)"},{"path":"https://adamkocsis.github.io/icosa/reference/SpPolygons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial polygons from an icosahedral grid — SpPolygons","text":"gridObj (trigrid hexagrid) icosahedral grid. ... Arguments passed class-specific methods. res (numeric) number points inserted two vertices, NULL, set package. default method increases resolution lower tessellation values, higher higher absolute latitudes.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/SpPolygons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial polygons from an icosahedral grid — SpPolygons","text":"SpatialPolygons class object.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/SpPolygons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial polygons from an icosahedral grid — SpPolygons","text":"","code":"a <- trigrid() sp <- SpPolygons(a)"},{"path":"https://adamkocsis.github.io/icosa/reference/arcdist.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of distances along arcs — arcdist","title":"Calculation of distances along arcs — arcdist","text":"function calculates shortest arc distance two points.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/arcdist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of distances along arcs — arcdist","text":"","code":"arcdist(p1, p2, output = \"distance\", origin = c(0, 0, 0), radius = authRadius)"},{"path":"https://adamkocsis.github.io/icosa/reference/arcdist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of distances along arcs — arcdist","text":"p1 (numeric) Vector, XYZ longitude-latitude coordinates first point along arc. p2 (numeric) Vector, XYZ longitude-latitude coordinates last point along arc. output (character) type output value. \"distance\" give distance metric fed function coordinates radius. \"deg\" output distance degrees, \"rad\" radians. origin (numeric) Vector, center circle XYZ coordinates (default c(0,0,0)). radius (numeric) radius circle case input points polar coordinates . Unused XYZ coordinates entered. Defaults authalic radius Earth ca. 6371.007km.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/arcdist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of distances along arcs — arcdist","text":"single numeric value.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/arcdist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculation of distances along arcs — arcdist","text":"","code":"# coordinates of two points point1<- c(0,0) point2<- c(180,0) arcdist(point1,point2,\"distance\") #> [1] 20015.11"},{"path":"https://adamkocsis.github.io/icosa/reference/arcdistmat.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of distance matrices along arcs — arcdistmat","title":"Calculation of distance matrices along arcs — arcdistmat","text":"function calculates shortest arc distance matrix two sets points.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/arcdistmat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of distance matrices along arcs — arcdistmat","text":"","code":"arcdistmat(   points1,   points2 = NULL,   origin = c(0, 0, 0),   output = \"distance\",   radius = authRadius )"},{"path":"https://adamkocsis.github.io/icosa/reference/arcdistmat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of distance matrices along arcs — arcdistmat","text":"points1 (numeric) Matrix, XYZ longitude-latitude coordinates first set points. points2 (numeric) Matrix, XYZ longitude-latitude coordinates second set points.  Leave empty want arc distances set points origin (numeric) Vector, center circle XYZ coordinates (default c(0,0,0)). output (character) type output value. \"distance\" give back distance metric fed function coordinates radius. \"deg\" output distance degrees, \"rad\" radians. radius (numeric) radius circle case input points polar coordinates . Unused XYZ coordinates entered. Defaults authalic radius Earth ca. 6371.007km.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/arcdistmat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of distance matrices along arcs — arcdistmat","text":"single numeric value.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/arcdistmat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculation of distance matrices along arcs — arcdistmat","text":"function create possible shortest arc distances points two sets, \tpoints within sets. function useful great circle distance calculations. \tsymmetrical distance matrix leave points2 argument empty.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/arcdistmat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculation of distance matrices along arcs — arcdistmat","text":"","code":"g <- trigrid(c(4)) res <- arcdistmat(g@vertices)  rand<-rpsphere(500) res2 <- arcdistmat(g@vertices, rand)"},{"path":"https://adamkocsis.github.io/icosa/reference/arcpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of point coordinates along an arc — arcpoints","title":"Calculation of point coordinates along an arc — arcpoints","text":"function calculates points along arc two points circle center.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/arcpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of point coordinates along an arc — arcpoints","text":"","code":"arcpoints(   p1,   p2,   breaks = 2,   origin = c(0, 0, 0),   onlyNew = FALSE,   output = \"cartesian\",   radius = authRadius )"},{"path":"https://adamkocsis.github.io/icosa/reference/arcpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of point coordinates along an arc — arcpoints","text":"p1 (numeric) Vector, XYZ longitude-latitude coordinates first point along arc. p2 (numeric) Vector, XYZ longitude-latitude coordinates last point along arc. breaks (integer) number points inserted p1 p2. positive. origin (numeric) vector, center circle XYZ coordinates (default c(0,0,0)). onlyNew (logical) p1 p2 omitted result? output (character) coordinate system output points. Can either \"polar\" longitude-latitude \"cartesian\" XYZ data. radius (numeric) Single value, radius circle case input points polar coordinates. Unused XYZ coordinates entered. Defaults authalic radius Earth ca. 6371.007km.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/arcpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of point coordinates along an arc — arcpoints","text":"Either XYZ long-lat numeric matrix.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/arcpoints.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculation of point coordinates along an arc — arcpoints","text":"function always returns smaller arc, angle alpha < pi.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/arcpoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculation of point coordinates along an arc — arcpoints","text":"","code":"# empty plot plot(NULL, NULL, xlim=c(-180, 180), ylim=c(-90,90)) # then endpoints of the arc point1<-c(-45,-70) point2<-c(130,65) points(arcpoints(point1, point2, breaks=70, output=\"polar\"))"},{"path":"https://adamkocsis.github.io/icosa/reference/cellocator.html","id":null,"dir":"Reference","previous_headings":"","what":"Locate grid faces based on their positions on a map — cellocator","title":"Locate grid faces based on their positions on a map — cellocator","text":"function returns grid faces contain points clicked plot.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/cellocator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locate grid faces based on their positions on a map — cellocator","text":"","code":"cellocator(gridObj, n, output = \"faces\", ...)"},{"path":"https://adamkocsis.github.io/icosa/reference/cellocator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Locate grid faces based on their positions on a map — cellocator","text":"gridObj (trigrid hexagrid) grid object. n (integer) number points looked . output (character) Type output: \"faces\" returns face names points, \"full\" returns coordinates well. ... Arguments passed locator function.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/cellocator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Locate grid faces based on their positions on a map — cellocator","text":"vector character values, corresponding face identifier.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/centers.html","id":null,"dir":"Reference","previous_headings":"","what":"The face centers of an icosahedral grid object — centers","title":"The face centers of an icosahedral grid object — centers","text":"Shorthand function return @faceCenters slot icosahedral grid grid linked facelayer.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/centers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The face centers of an icosahedral grid object — centers","text":"","code":"centers(x, ...)  # S4 method for trigrid centers(x, output = \"polar\")  # S4 method for facelayer centers(x, output = \"polar\")"},{"path":"https://adamkocsis.github.io/icosa/reference/centers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The face centers of an icosahedral grid object — centers","text":"x (trigrid, hexagrid facelayer). grid linked data layer object. ... Arguments passed class specific methods. output (character) coordinate system output. Either \"polar\" \"cartesian\".","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/centers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The face centers of an icosahedral grid object — centers","text":"coordinates face centers numeric matrix.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/centers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The face centers of an icosahedral grid object — centers","text":"","code":"a <- trigrid() centers(a) #>     long       lat #> F1  -126  52.62263 #> F2   -54  52.62263 #> F3    18  52.62263 #> F4    90  52.62263 #> F5   162  52.62263 #> F6   162  10.81232 #> F7  -162 -10.81232 #> F8  -126  10.81232 #> F9   -90 -10.81232 #> F10  -54  10.81232 #> F11  -18 -10.81232 #> F12   18  10.81232 #> F13   54 -10.81232 #> F14   90  10.81232 #> F15  126 -10.81232 #> F16  126 -52.62263 #> F17 -162 -52.62263 #> F18  -90 -52.62263 #> F19  -18 -52.62263 #> F20   54 -52.62263"},{"path":"https://adamkocsis.github.io/icosa/reference/chullsphere.html","id":null,"dir":"Reference","previous_headings":"","what":"Spherical convex hull. — chullsphere","title":"Spherical convex hull. — chullsphere","text":"function calculates possible implementation spherical convex hull.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/chullsphere.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spherical convex hull. — chullsphere","text":"","code":"chullsphere(   data,   center = c(0, 0, 0),   radius = authRadius,   param = 200,   strict = TRUE )"},{"path":"https://adamkocsis.github.io/icosa/reference/chullsphere.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spherical convex hull. — chullsphere","text":"data (numeric) Matrix, XYZ longitude-latitude coordinates set points. center (numeric) Vector, center sphere XYZ coordinates (default 0,0,0). radius (numeric) Single value, indicating radius sphere. Defaults R2 radius Earth (6371.007km). param (numeric) Single positive integer, indicates number divisions centroid projection method. higher number, closer replacement points centroid. strict (logical) Strictly convex output required.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/chullsphere.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spherical convex hull. — chullsphere","text":"indices data points forming convex hull (numeric) vector.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/chullsphere.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spherical convex hull. — chullsphere","text":"method centroidprojection function calls surfacecentroid  function get reference point shape. points 'projected'  close point using great circles linking reference point. great circle devided equal number points closest  replace original point coordinates convex hull algorithm implemented chull.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/chullsphere.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spherical convex hull. — chullsphere","text":"","code":"# generate some random points allData <- rpsphere(1000) # select only a subset points<-allData[allData[,1]>3000,] chullsphere(points) #>  [1]  99 124 180 140  18  65 186  85  10  51  91 166  92  52 169  38"},{"path":"https://adamkocsis.github.io/icosa/reference/edgelength.html","id":null,"dir":"Reference","previous_headings":"","what":"Lengths of grid edges — edgelength","title":"Lengths of grid edges — edgelength","text":"function return length edges specified grid object.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/edgelength.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lengths of grid edges — edgelength","text":"","code":"edgelength(gridObj, ...)  # S4 method for trigrid edgelength(gridObj, output = \"distance\")"},{"path":"https://adamkocsis.github.io/icosa/reference/edgelength.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lengths of grid edges — edgelength","text":"gridObj (trigrid {hexagrid}) grid object. ... Arguments passed class specific methods. output (character) type output. \"distance\" give back distance metric fed function coordinates radius. \"deg\" output distance degrees, \"rad\" radians.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/edgelength.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lengths of grid edges — edgelength","text":"named numeric vector.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/edgelength.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lengths of grid edges — edgelength","text":"","code":"g <- trigrid(3) edges <- edgelength(g, output=\"deg\") edges #>       E1       E2       E3       E4       E5       E6       E7       E8  #> 21.14498 21.14498 24.48283 21.14498 21.14498 24.48283 21.14498 21.14498  #>       E9      E10      E11      E12      E13      E14      E15      E16  #> 24.48283 21.14498 23.31925 23.31925 23.31925 23.31925 21.14498 23.31925  #>      E17      E18      E19      E20      E21      E22      E23      E24  #> 23.31925 21.14498 21.14498 24.48283 21.14498 21.14498 24.48283 21.14498  #>      E25      E26      E27      E28      E29      E30      E31      E32  #> 24.48283 21.14498 23.31925 23.31925 23.31925 23.31925 23.31925 23.31925  #>      E33      E34      E35      E36      E37      E38      E39      E40  #> 21.14498 21.14498 21.14498 24.48283 21.14498 21.14498 24.48283 21.14498  #>      E41      E42      E43      E44      E45      E46      E47      E48  #> 21.14498 24.48283 21.14498 23.31925 23.31925 23.31925 23.31925 21.14498  #>      E49      E50      E51      E52      E53      E54      E55      E56  #> 23.31925 23.31925 21.14498 24.48283 21.14498 24.48283 21.14498 24.48283  #>      E57      E58      E59      E60      E61      E62      E63      E64  #> 23.31925 23.31925 23.31925 23.31925 23.31925 23.31925 21.14498 24.48283  #>      E65      E66      E67      E68      E69      E70      E71      E72  #> 21.14498 24.48283 21.14498 24.48283 23.31925 23.31925 23.31925 23.31925  #>      E73      E74      E75      E76      E77      E78      E79      E80  #> 23.31925 23.31925 21.14498 21.14498 21.14498 24.48283 21.14498 21.14498  #>      E81      E82      E83      E84      E85      E86      E87      E88  #> 24.48283 21.14498 21.14498 24.48283 21.14498 23.31925 23.31925 23.31925  #>      E89      E90      E91      E92      E93      E94      E95      E96  #> 23.31925 21.14498 23.31925 23.31925 21.14498 21.14498 21.14498 24.48283  #>      E97      E98      E99     E100     E101     E102     E103     E104  #> 21.14498 24.48283 21.14498 24.48283 21.14498 23.31925 23.31925 23.31925  #>     E105     E106     E107     E108     E109     E110     E111     E112  #> 23.31925 21.14498 23.31925 23.31925 21.14498 24.48283 21.14498 24.48283  #>     E113     E114     E115     E116     E117     E118     E119     E120  #> 21.14498 21.14498 24.48283 23.31925 23.31925 23.31925 23.31925 21.14498  #>     E121     E122     E123     E124     E125     E126     E127     E128  #> 23.31925 23.31925 21.14498 21.14498 24.48283 24.48283 21.14498 24.48283  #>     E129     E130     E131     E132     E133     E134     E135     E136  #> 23.31925 23.31925 23.31925 23.31925 21.14498 23.31925 23.31925 21.14498  #>     E137     E138     E139     E140     E141     E142     E143     E144  #> 24.48283 24.48283 21.14498 24.48283 23.31925 23.31925 23.31925 23.31925  #>     E145     E146     E147     E148     E149     E150     E151     E152  #> 21.14498 23.31925 23.31925 21.14498 21.14498 24.48283 21.14498 21.14498  #>     E153     E154     E155     E156     E157     E158     E159     E160  #> 24.48283 21.14498 21.14498 24.48283 21.14498 23.31925 23.31925 23.31925  #>     E161     E162     E163     E164     E165     E166     E167     E168  #> 23.31925 21.14498 23.31925 23.31925 21.14498 24.48283 21.14498 24.48283  #>     E169     E170     E171     E172     E173     E174     E175     E176  #> 21.14498 24.48283 23.31925 23.31925 23.31925 23.31925 23.31925 23.31925  #>     E177     E178     E179     E180     E181     E182     E183     E184  #> 21.14498 21.14498 24.48283 24.48283 21.14498 24.48283 23.31925 23.31925  #>     E185     E186     E187     E188     E189     E190     E191     E192  #> 23.31925 23.31925 21.14498 23.31925 23.31925 21.14498 24.48283 21.14498  #>     E193     E194     E195     E196     E197     E198     E199     E200  #> 24.48283 21.14498 21.14498 24.48283 23.31925 23.31925 23.31925 23.31925  #>     E201     E202     E203     E204     E205     E206     E207     E208  #> 21.14498 23.31925 23.31925 21.14498 21.14498 24.48283 24.48283 21.14498  #>     E209     E210     E211     E212     E213     E214     E215     E216  #> 24.48283 23.31925 23.31925 23.31925 23.31925 21.14498 23.31925 23.31925  #>     E217     E218     E219     E220     E221     E222     E223     E224  #> 21.14498 24.48283 24.48283 21.14498 24.48283 23.31925 23.31925 23.31925  #>     E225     E226     E227     E228     E229     E230     E231     E232  #> 23.31925 21.14498 23.31925 23.31925 21.14498 24.48283 24.48283 21.14498  #>     E233     E234     E235     E236     E237     E238     E239     E240  #> 24.48283 23.31925 23.31925 23.31925 23.31925 21.14498 23.31925 23.31925  #>     E241     E242     E243     E244     E245     E246     E247     E248  #> 24.48283 24.48283 24.48283 23.31925 23.31925 23.31925 23.31925 23.31925  #>     E249     E250     E251     E252     E253     E254     E255     E256  #> 23.31925 21.14498 24.48283 21.14498 24.48283 24.48283 21.14498 23.31925  #>     E257     E258     E259     E260     E261     E262     E263     E264  #> 23.31925 23.31925 23.31925 23.31925 23.31925 24.48283 24.48283 24.48283  #>     E265     E266     E267     E268     E269     E270  #> 23.31925 23.31925 23.31925 23.31925 23.31925 23.31925"},{"path":"https://adamkocsis.github.io/icosa/reference/edges.html","id":null,"dir":"Reference","previous_headings":"","what":"The edges of a 3d object — edges","title":"The edges of a 3d object — edges","text":"Shorthand function get edges slot icosahedral grid grid linked facelayer.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The edges of a 3d object — edges","text":"","code":"edges(x)  # S4 method for obj3d edges(x)  # S4 method for facelayer edges(x)"},{"path":"https://adamkocsis.github.io/icosa/reference/edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The edges of a 3d object — edges","text":"x (trigrid, hexagrid facelayer) grid linked data object.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/edges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The edges of a 3d object — edges","text":"edges grid, character matrix.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/extract-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extraction from a gridlayer using indices — [,gridlayer,ANY,missing-method","title":"Extraction from a gridlayer using indices — [,gridlayer,ANY,missing-method","text":"Shorthand subset function. Function replace specific elements gridlayer object","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/extract-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extraction from a gridlayer using indices — [,gridlayer,ANY,missing-method","text":"","code":"# S4 method for gridlayer,ANY,missing [(x, i)  # S4 method for gridlayer,Extent,missing [(x, i)  # S4 method for gridlayer,ANY,ANY [(x, i) <- value"},{"path":"https://adamkocsis.github.io/icosa/reference/extract-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extraction from a gridlayer using indices — [,gridlayer,ANY,missing-method","text":"x (facelayer) object subsetted. (logical, numeric extent) subscript vector, extent, specifying faces used subsetting. subset. value replacement values.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/extract-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extraction from a gridlayer using indices — [,gridlayer,ANY,missing-method","text":"extraction methods return facelayer-class objects.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/extract-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extraction from a gridlayer using indices — [,gridlayer,ANY,missing-method","text":"methods implementing direct replacement @values slot layer, depending criteria used subsetting.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/facelayer-class.html","id":null,"dir":"Reference","previous_headings":"","what":"A facelayer linked to a trigrid or hexagrid object — facelayer-class","title":"A facelayer linked to a trigrid or hexagrid object — facelayer-class","text":"grids scaffolds assigned data. data stored containers linked grids.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/facelayer-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A facelayer linked to a trigrid or hexagrid object — facelayer-class","text":"gridObj (hexagrid trigrid) linked grid object. value (logical,numeric character) facelayer initialized values/value","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/facelayer-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A facelayer linked to a trigrid or hexagrid object — facelayer-class","text":"facelayer class object.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/facelayer-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A facelayer linked to a trigrid or hexagrid object — facelayer-class","text":"","code":"g <- trigrid(c(4,4)) fl <- facelayer(g, 1:length(g)) # faces3d(fl)"},{"path":"https://adamkocsis.github.io/icosa/reference/faces.html","id":null,"dir":"Reference","previous_headings":"","what":"The faces of a 3d object — faces","title":"The faces of a 3d object — faces","text":"Shorthand function get faces slot icosahedral grid grid linked facelayer.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/faces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The faces of a 3d object — faces","text":"","code":"faces(x)  # S4 method for trigrid faces(x)  # S4 method for gridlayer faces(x)"},{"path":"https://adamkocsis.github.io/icosa/reference/faces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The faces of a 3d object — faces","text":"x (trigrid, hexagrid facelayer) grid facelayer object.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/faces.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The faces of a 3d object — faces","text":"faces grid character matrix.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/faces3d.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods of 3D face plotting. — faces3d","title":"Methods of 3D face plotting. — faces3d","text":"function used plot faces either trigrid, hexagrid facelayer object 3D space.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/faces3d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods of 3D face plotting. — faces3d","text":"","code":"faces3d(x, ...)  # S4 method for trigrid faces3d(x, ...)  # S4 method for hexagrid faces3d(x, ...)  # S4 method for facelayer faces3d(x, col = \"heat\", breaks = NULL, inclusive = TRUE, legend = TRUE, ...)"},{"path":"https://adamkocsis.github.io/icosa/reference/faces3d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods of 3D face plotting. — faces3d","text":"x trigrid, hexagrid facelayer object plotted. ... graphical parameters passed (see plot3d) heatMapLegend function. col (character) Graphical parameter indicating colours faces. single value accepted logical values. Multiple colors passed colorRampPalette, create palettes heat maps case numeric values. default plotting method case reversed heat.colors. case categorical data, random colors chosen. breaks (numeric) Vector stating breakpoints plotted levels. argument passed cut function. inclusive (logical): values beyond limits breaks, represented plot (TRUE) left completely FALSE? legend (logical) heatmap legend plotted?","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/faces3d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Methods of 3D face plotting. — faces3d","text":"function return value.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/faces3d.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Methods of 3D face plotting. — faces3d","text":"function built openGL renderer R package rgl.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/faces3d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Methods of 3D face plotting. — faces3d","text":"","code":"# create a hexagonal grid     g <- hexagrid(c(2,2)) # plot the grid in 3d space # faces3d(g) h <- hexagrid(8) b <- facelayer(h) values(b)<- rnorm(length(b))"},{"path":"https://adamkocsis.github.io/icosa/reference/gridgraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Create or instantiate an graph class graph from the faces of an icosahedral grid — gridgraph","title":"Create or instantiate an graph class graph from the faces of an icosahedral grid — gridgraph","text":"function can applied grids facelayer-class object logical values. resulting graph characteristics original grid (directed/undirected etc.).","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/gridgraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create or instantiate an graph class graph from the faces of an icosahedral grid — gridgraph","text":"","code":"gridgraph(x, ...)  # S4 method for trigrid gridgraph(x, directed = FALSE, distances = FALSE)  # S4 method for hexagrid gridgraph(x, directed = FALSE, distances = FALSE)  # S4 method for facelayer gridgraph(x)"},{"path":"https://adamkocsis.github.io/icosa/reference/gridgraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create or instantiate an graph class graph from the faces of an icosahedral grid — gridgraph","text":"x (trigrid, hexagrid facelayer) icosahedral grid facelayer. ... Arguments passed class specific methods. directed logical Defaults FALSE, creating undirected graph. TRUE, graph directed. distances logical Defaults FALSE. TRUE, distances linked faces calculated rendered edges \"dist\".","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/gridgraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create or instantiate an graph class graph from the faces of an icosahedral grid — gridgraph","text":"function returns undirected igraph graph.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/gridlabs.html","id":null,"dir":"Reference","previous_headings":"","what":"Labels of grid vertices, faces and edges. — gridlabs","title":"Labels of grid vertices, faces and edges. — gridlabs","text":"function show grid elements located.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/gridlabs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Labels of grid vertices, faces and edges. — gridlabs","text":"","code":"gridlabs(gridObj, type = \"f\", projargs = NULL, ...)"},{"path":"https://adamkocsis.github.io/icosa/reference/gridlabs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Labels of grid vertices, faces and edges. — gridlabs","text":"gridObj (trigrid, hexagrid) icosahedral grid. type (character) type element plotted: either \"f\" (faces), \"v\" (vertices)  \"e\" (edges). projargs (character CRS) projection string transformation fo coordinates. ... Arguments passed text function.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/gridlabs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Labels of grid vertices, faces and edges. — gridlabs","text":"function return value.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/gridlabs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Labels of grid vertices, faces and edges. — gridlabs","text":"","code":"gr <- hexagrid(sp=TRUE) plot(gr) gridlabs(gr)"},{"path":"https://adamkocsis.github.io/icosa/reference/gridlabs3d.html","id":null,"dir":"Reference","previous_headings":"","what":"Display the names of the grid elements in 3d plots. — gridlabs3d","title":"Display the names of the grid elements in 3d plots. — gridlabs3d","text":"function display names vertices, faces edges 3d plots.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/gridlabs3d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display the names of the grid elements in 3d plots. — gridlabs3d","text":"","code":"gridlabs3d(gridObj, ...)  # S4 method for trigrid gridlabs3d(gridObj, type = \"f\", ...)  # S4 method for hexagrid gridlabs3d(gridObj, type = \"f\", ...)"},{"path":"https://adamkocsis.github.io/icosa/reference/gridlabs3d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display the names of the grid elements in 3d plots. — gridlabs3d","text":"gridObj (trigrid, hexagrid) icosahedral grid. ... Additional arguments passed text3d function rgl package. type (character) Vector containing either \"f\", \"e\" \"v\", rendering names either faces, edges vertives respectively.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/gridlabs3d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display the names of the grid elements in 3d plots. — gridlabs3d","text":"function return value.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/gridlabs3d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display the names of the grid elements in 3d plots. — gridlabs3d","text":"","code":"# create a hexagonal grid g <- hexagrid(c(2,2)) # plot the grid in 3d space # lines3d(g, guides=FALSE) # labels # gridlabs3d(g)"},{"path":"https://adamkocsis.github.io/icosa/reference/guides3d.html","id":null,"dir":"Reference","previous_headings":"","what":"Guides for 3d spherical plotting. — guides3d","title":"Guides for 3d spherical plotting. — guides3d","text":"function plots 3d guidelines navigation surface sphere, \t includings rotational axis polar coordinate system.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/guides3d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guides for 3d spherical plotting. — guides3d","text":"","code":"guides3d(   axis = 1.5,   polgrid = c(30, 30),   textPG = FALSE,   res = 1,   origin = c(0, 0, 0),   radius = authRadius,   drad = 1.1,   ... )"},{"path":"https://adamkocsis.github.io/icosa/reference/guides3d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guides for 3d spherical plotting. — guides3d","text":"axis (numeric) Draws -90(lat. deg. ) +90 (lat. deg.) axis. plotted radius axis times authalic radius, ca. 6371km. polgrid (numeric) length 2, first argument specifies size longitudinal second latitudinal divisions (degrees). Setting argument NULL turn feature . textPG (logical) Flag indicating whether coordinate values added 3d render. res (numeric) Graphical resolution curves: distance degrees points rendered guides. origin (numeric) Vector length=3. Indicates center guiding sphere. radius (numeric) Values indicating radius guiding sphere. Defaults R2 radius Earth (6371.007km). drad (numeric) Value, indicates position coordinate 3d text relative guiding sphere radius. ... Additional arguments passed segments3d, lines3d text3d.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/guides3d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guides for 3d spherical plotting. — guides3d","text":"function return value.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/guides3d.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Guides for 3d spherical plotting. — guides3d","text":"function built openGL renderer R package rgl.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/guides3d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guides for 3d spherical plotting. — guides3d","text":"","code":"# create a hexagonal grid   g <- hexagrid(c(2,2)) # plot the grid in 3d space # plot3d(g, guides=FALSE) # plot the rotational axis in blue # guides3d(axis=2, polgrid=NULL, col=\"blue\") # plot the polar grid at 10 degree resolution # guides3d(axis=NULL, polgrid=c(10,10), col=\"red\") # plot some coordinates # guides3d(axis=NULL, polgrid=c(30,30), textPG=TRUE, col=\"orange\", cex=1.4)"},{"path":"https://adamkocsis.github.io/icosa/reference/heatMapLegend.html","id":null,"dir":"Reference","previous_headings":"","what":"Legend for a heatmap with predefined colors. — heatMapLegend","title":"Legend for a heatmap with predefined colors. — heatMapLegend","text":"function invoke plot function draw heatmap legend.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/heatMapLegend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Legend for a heatmap with predefined colors. — heatMapLegend","text":"","code":"heatMapLegend(   cols,   vals,   varName,   tick.text = NULL,   tick.cex = 1.5,   barWidth = 3,   barHeight = 50,   tickLength = 1,   xLeft = 88,   yBot = 25,   add = FALSE,   bounds = c(FALSE, FALSE),   ... )"},{"path":"https://adamkocsis.github.io/icosa/reference/heatMapLegend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Legend for a heatmap with predefined colors. — heatMapLegend","text":"cols (character) Vector, containnig ordered colors used heatmap. vals (numeric) tick.text missing, lowest value heatmap varName (character) label variable name plotted heatmap. tick.text (numeric) values heatmap legend. missing, calculated minVal maxVal. tick.cex (numeric) Letter size values legend. barWidth (numeric) width (percent) bar featuring colors heatmap. barHeight (numeric) height (percent)bar featuring colors heatmap. tickLength (numeric)  length (percent) ticks bars. xLeft (numeric) x coordinate lower left hand corner bar. yBot (numeric) y coordinate lower left hand corner bar. add (logical) Indicates wheter new plot drawn . Defaults FALSE. bounds (logical) Vector (length 2) indicating whether open intervals indicated legend. ... Arguments passed plot function.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/heatMapLegend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Legend for a heatmap with predefined colors. — heatMapLegend","text":"function return value.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/heatMapLegend.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Legend for a heatmap with predefined colors. — heatMapLegend","text":"'percents' refer plotting area measured lower left corner.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/hexagrid-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a penta-hexagonal icosahedral grid — hexagrid-class","title":"Construct a penta-hexagonal icosahedral grid — hexagrid-class","text":"hexagrid function constrcucts hexa-pentagonal grid based inversion     tessellated icosahedron.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/hexagrid-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a penta-hexagonal icosahedral grid — hexagrid-class","text":"tessellation (numeric) integer vector tessellation values. number  describes number new edges replacing one original edge. Multiple series tessellations     possible way. total tessellation product tessellation vector.  Higher values result uniform cell sizes, larger number tessellation series, increases speed lookup functions. sp (logical) Flag indicating whether SpatialPolygons class representation grid added object grid calculated. set true SpPolygons function run resolution parameter set 25.   resulting object stored slot @sp. calculation object can increase grid creation time substantially  default argument value FALSE. can added demand running function newsp. graph (logical) Flag indicating whether igraph class representation grid added object grid calculated. argument defaults TRUE option minor performance load grid  constructor function. familiarization object structure, however, setting parameter FALSE might help, invoking str 'igraph' class slot class might flood console. radius (numeric) radius grid. Defaults authalic radius Earth. center (numeric) origin grid reference Cartesian coordinate system. Defaults c(0,0,0).","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/hexagrid-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a penta-hexagonal icosahedral grid — hexagrid-class","text":"hexagonal grid object, class hexagrid.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/hexagrid-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct a penta-hexagonal icosahedral grid — hexagrid-class","text":"Inherits trigrid class. grid structure functions frame data graining, plotting calculations. Data can stored layers linked grid object. current version  facelayer class implemented allows user render data cells grid called faces.  \tgrid 'user interface' made four primary tables: @vertices table coordinates vertices, \tfaceCenters coordinates centers faces, faces edges tables contain vertices form faces edges respectively. tables, faces vertices sorted form spirals go north pole counter-clockwise direction. case grid subsetting performed tables get truncated. finer resolutions, large number spatial elements render calculations resource demanding slow,  therefore hierarchical structure created tessellation procedure retained efficient implementations. data stored list slot @skeleton 0-indexed integer tables Rccp-based functions. $v  stores vertex, $f edge, $e contains edge data plotting calculations. tables original hierarchy based orderings units retained, subsetting, additional vectors used indicate deactivation units. sort meddling @skeleton object lead unexpected behavior.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/hexagrid-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Construct a penta-hexagonal icosahedral grid — hexagrid-class","text":"vertices Matrix vertex coordinates. faces Matrix verticies forming faces edges Matrix vertices forming edges. tessellation Contains tessellation vector. orientation Contains grid orientation xyz 3d space, values radian. center xyz coordinates grid's origin/center. div Contains number faces single face previous tessellation level decomposed . faceCenters Contains xyz coordinates centers faces surface sphere.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/hexagrid-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a penta-hexagonal icosahedral grid — hexagrid-class","text":"","code":"g <- hexagrid(c(8), sp=TRUE) g1 <- hexagrid(c(2,3,4))"},{"path":"https://adamkocsis.github.io/icosa/reference/icosa.html","id":null,"dir":"Reference","previous_headings":"","what":"Global Triangular and Hexa-Pentagonal Grids Based on Tessellated Icosahedra — icosa","title":"Global Triangular and Hexa-Pentagonal Grids Based on Tessellated Icosahedra — icosa","text":"icosa package provides tools aggregate analyze geographic data using grids based tessellated icosahedra. procedures can set provide grid    custom resolution. primary triangular inverted penta-   hexagonal grids available implementation. Additional functions    provided position points (latitude-longitude data) grids,    allow 2D 3D plotting, use raster data shapefiles.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/icosa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Global Triangular and Hexa-Pentagonal Grids Based on Tessellated Icosahedra — icosa","text":"still Beta version. Notes found bugs suggestions welcome!","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/icosa.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Global Triangular and Hexa-Pentagonal Grids Based on Tessellated Icosahedra — icosa","text":"Adam T. Kocsis (adam.t.kocsis@gmail.com)","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/icosa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Global Triangular and Hexa-Pentagonal Grids Based on Tessellated Icosahedra — icosa","text":"","code":"# Create a triangular grid tri <- trigrid(c(2,2))"},{"path":"https://adamkocsis.github.io/icosa/reference/length.html","id":null,"dir":"Reference","previous_headings":"","what":"The number of faces in a trigrid or hexagrid class object. — length,trigrid-method","title":"The number of faces in a trigrid or hexagrid class object. — length,trigrid-method","text":"length object interpreted number faces contains.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The number of faces in a trigrid or hexagrid class object. — length,trigrid-method","text":"","code":"# S4 method for trigrid length(x)  # S4 method for gridlayer length(x)"},{"path":"https://adamkocsis.github.io/icosa/reference/length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The number of faces in a trigrid or hexagrid class object. — length,trigrid-method","text":"x (trigrid, hexagrid facelayer) object.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The number of faces in a trigrid or hexagrid class object. — length,trigrid-method","text":"integer value.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/lines-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Lines method for the trigrid and hexagrid classes — lines,trigrid-method","title":"Lines method for the trigrid and hexagrid classes — lines,trigrid-method","text":"function invoke sp.lines method SpatialPolygons class.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/lines-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lines method for the trigrid and hexagrid classes — lines,trigrid-method","text":"","code":"# S4 method for trigrid lines(x, projargs = NULL, ...)"},{"path":"https://adamkocsis.github.io/icosa/reference/lines-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lines method for the trigrid and hexagrid classes — lines,trigrid-method","text":"x (trigrid, hexagrid) Object. projargs (character CRS) projection string transformation fo coordinates. ... Arguments passed sp.lines method.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/lines-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lines method for the trigrid and hexagrid classes — lines,trigrid-method","text":"function return value.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/lines3d.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods of 3d line plotting — lines3d","title":"Methods of 3d line plotting — lines3d","text":"generic function used plot edge lines either trigrid hexagrid object, facelayer, Spatial objects 3d space. method also implemented  object classes defined package 'sp'.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/lines3d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods of 3d line plotting — lines3d","text":"","code":"lines3d  # S4 method for trigrid lines3d(x, arcs = FALSE, ...)  # S4 method for Line lines3d(x, radius = authRadius, ...)  # S4 method for Lines lines3d(x, radius = authRadius, ...)  # S4 method for SpatialLines lines3d(x, radius = authRadius, ...)  # S4 method for SpatialLinesDataFrame lines3d(x, radius = authRadius, ...)  # S4 method for Polygon lines3d(x, radius = authRadius, ...)  # S4 method for Polygons lines3d(x, radius = authRadius, ...)  # S4 method for SpatialPolygons lines3d(x, radius = authRadius, ...)  # S4 method for SpatialPolygonsDataFrame lines3d(x, radius = authRadius, ...)"},{"path":"https://adamkocsis.github.io/icosa/reference/lines3d.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Methods of 3d line plotting — lines3d","text":"object class nonstandardGenericFunction length 1.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/lines3d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods of 3d line plotting — lines3d","text":"x (trigrid, hexagrid, facelayer sp) Object plotted. arcs logical Value setting whether great circle arcs segments shall drawn betwenn points grid. ... graphical parameters passed (see plot3d). radius (numeric) Used plotting objects inherit Spatial*. radius sphere sp objects plotted . Default authalic (R2) radius Earth.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/lines3d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Methods of 3d line plotting — lines3d","text":"function return value.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/lines3d.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Methods of 3d line plotting — lines3d","text":"function built openGL renderer R package rgl, needs installed function run. Although function works without attaching rgl, note want attach icosa rgl,rgl package loaded ifrst otherwise function usable.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/lines3d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Methods of 3d line plotting — lines3d","text":"","code":"# create a hexagonal grid   g <- hexagrid(c(2,2)) # plot the grid in 3d space #  lines3d(g, col=\"blue\")"},{"path":"https://adamkocsis.github.io/icosa/reference/locate.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic lookup function of coordinates on an icosahedral grid — locate","title":"Basic lookup function of coordinates on an icosahedral grid — locate","text":"Basic lookup function coordinates icosahedral grid","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/locate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic lookup function of coordinates on an icosahedral grid — locate","text":"","code":"locate(x, y, ...)  # S4 method for trigrid,matrix locate(x, y, randomborder = FALSE, output = \"ui\")  # S4 method for trigrid,numeric locate(x, y, ...)  # S4 method for trigrid,data.frame locate(x, y, ...)  # S4 method for trigrid,SpatialPoints locate(x, y, ...)  # S4 method for trigrid,SpatialPointsDataFrame locate(x, y, ...)  # S4 method for hexagrid,matrix locate(x, y, output = \"ui\", randomborder = FALSE, forceNA = FALSE)"},{"path":"https://adamkocsis.github.io/icosa/reference/locate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic lookup function of coordinates on an icosahedral grid — locate","text":"x (trigrid, hexagrid) Icosahedral grid object. y (matrix, data.frame, numeric Spatial) Coordinates individual points. Can either two-dimensional  matrix long-lat coordinates, three-dimensional matrix XYZ coordinates,  set points class SpatialPoints SpatialPointsDataFrame. ... Arguments passed class specific methods. randomborder (logical) Defaults FALSE. TRUE, points falling vertices edges randomly assigned, otherwise kept NAs. output (character) Either \"ui\" \"skeleton\". \"ui\" returns face  names used user interface, \"skeleton\" returns  indices used back-end procedures. forceNA (logical) Suppressing recursive lookup points falling subface boundaries.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/locate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Basic lookup function of coordinates on an icosahedral grid — locate","text":"function returns cell names (character) input coordinates fall.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/locate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basic lookup function of coordinates on an icosahedral grid — locate","text":"","code":"# create a grid  g <- trigrid(4) # some random points randomPoints<-rpsphere(4, output=\"polar\") # cells locate(g, randomPoints) #> [1] \"F114\" \"F153\" \"F265\" \"F87\""},{"path":"https://adamkocsis.github.io/icosa/reference/names.html","id":null,"dir":"Reference","previous_headings":"","what":"The face names in a facelayer class object — names,gridlayer-method","title":"The face names in a facelayer class object — names,gridlayer-method","text":"Function extract registered face names facelayer renders information.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The face names in a facelayer class object — names,gridlayer-method","text":"","code":"# S4 method for gridlayer names(x)"},{"path":"https://adamkocsis.github.io/icosa/reference/names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The face names in a facelayer class object — names,gridlayer-method","text":"x (facelayer) Object.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The face names in a facelayer class object — names,gridlayer-method","text":"vector character values, names faces.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/newgraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an igraph object to a predefined slot in an icosahedral grid — newgraph","title":"Add an igraph object to a predefined slot in an icosahedral grid — newgraph","text":"Add igraph object predefined slot icosahedral grid","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/newgraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an igraph object to a predefined slot in an icosahedral grid — newgraph","text":"","code":"newgraph(gridObj, ...)  # S4 method for trigrid newgraph(gridObj, ...)"},{"path":"https://adamkocsis.github.io/icosa/reference/newgraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an igraph object to a predefined slot in an icosahedral grid — newgraph","text":"gridObj (trigrid, hexagrid) icosahedral grid. ... Arguments passed gridgraph function.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/newgraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an igraph object to a predefined slot in an icosahedral grid — newgraph","text":"new (trigrid hexagrid) object recalculated graph.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/newgraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add an igraph object to a predefined slot in an icosahedral grid — newgraph","text":"","code":"#create a grid g<-trigrid(4, graph=FALSE) g<-newgraph(g)"},{"path":"https://adamkocsis.github.io/icosa/reference/newsp.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a SpatialPolygons object to a predefined slot in a trigrid or hexagrid object — newsp","title":"Add a SpatialPolygons object to a predefined slot in a trigrid or hexagrid object — newsp","text":"Add SpatialPolygons object predefined slot trigrid hexagrid object","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/newsp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a SpatialPolygons object to a predefined slot in a trigrid or hexagrid object — newsp","text":"","code":"newsp(gridObj, res = NULL)  # S4 method for trigrid newsp(gridObj, res = NULL)"},{"path":"https://adamkocsis.github.io/icosa/reference/newsp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a SpatialPolygons object to a predefined slot in a trigrid or hexagrid object — newsp","text":"gridObj (trigrid hexagrid) icosahedral grid. res (numeric) number points inserted two vertices, passed SpPolygons.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/newsp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a SpatialPolygons object to a predefined slot in a trigrid or hexagrid object — newsp","text":"trigrid hexagrid object new @sp slot.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/newsp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a SpatialPolygons object to a predefined slot in a trigrid or hexagrid object — newsp","text":"","code":"a<-trigrid(4) a<-newsp(a) plot(a)"},{"path":"https://adamkocsis.github.io/icosa/reference/occupied.html","id":null,"dir":"Reference","previous_headings":"","what":"Faces occupied by the specified object — occupied","title":"Faces occupied by the specified object — occupied","text":"function return facelayer class object showing faces occupied input object.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/occupied.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Faces occupied by the specified object — occupied","text":"","code":"occupied(gridObj, data, ...)"},{"path":"https://adamkocsis.github.io/icosa/reference/occupied.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Faces occupied by the specified object — occupied","text":"gridObj (trigrid hexagrid) icoshedral grid. data (matrix, data.frame Spatial) queried data. ... Arguments passed class specific methods","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/occupied.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Faces occupied by the specified object — occupied","text":"function Returns facelayer-class object.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/occupied.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Faces occupied by the specified object — occupied","text":"wrapper function OccupiedFaces methods specific grid class input data.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/occupied.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Faces occupied by the specified object — occupied","text":"","code":"# create a grid g <- trigrid(8, sp=TRUE)  # create random points randPoints <- rpsphere(100,output=\"polar\")  # the facelayer occupied by these points randomLayer <- occupied(g, randPoints) plot(randomLayer) #> Error in get(x@grid): object 'g' not found points(randPoints, col=\"blue\", pch=\"+\") #> Error in plot.xy(xy.coords(x, y), type = type, ...): plot.new has not been called yet"},{"path":"https://adamkocsis.github.io/icosa/reference/orientation.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracting and setting the grid orientation — orientation","title":"Extracting and setting the grid orientation — orientation","text":"Extracting setting grid orientation","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/orientation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracting and setting the grid orientation — orientation","text":"","code":"orientation(x, ...)  # S4 method for trigrid orientation(x, display = \"deg\", ...)  orientation(x) <- value  # S4 method for trigrid orientation(x) <- value"},{"path":"https://adamkocsis.github.io/icosa/reference/orientation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracting and setting the grid orientation — orientation","text":"x (trigrid hexagrid): Input grid. ... Values passed rotate function. display (character) output unit. case set \"deg\" output degrees, case \"rad\", radians. value (numeric) vector rotation. Passed angles argument rotate.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/orientation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracting and setting the grid orientation — orientation","text":"case function returns , returns orientation angles grid (numeric).","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for the trigrid, hexagrid or facelayer classes — plot","title":"Plot method for the trigrid, hexagrid or facelayer classes — plot","text":"function invoke plot method SpatialPolygons class. function passes arguments plot method SpatialPolygons class. case heatmap plotted plotting device gets resized, misalignments can happen. want use differently sized window, use x11 set height width running function.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for the trigrid, hexagrid or facelayer classes — plot","text":"","code":"plot  # S4 method for trigrid,ANY plot(x, projargs = NULL, ...)  # S4 method for facelayer,ANY plot(   x,   projargs = NULL,   col = \"heat\",   border = NA,   alpha = NULL,   frame = FALSE,   legend = TRUE,   breaks = NULL,   inclusive = TRUE,   discrete = FALSE,   ... )"},{"path":"https://adamkocsis.github.io/icosa/reference/plot.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Plot method for the trigrid, hexagrid or facelayer classes — plot","text":"object class standardGeneric length 1.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for the trigrid, hexagrid or facelayer classes — plot","text":"x (trigrid, hexagrid facelayer) object plotted. projargs (character CRS) projection string transformation fo coordinates. ... Arguments passed plot function. col (character) Colors passed colorRamp case facelayer contains logical values, single value required (defaults \"red\"). border (character) Specifyies color borders cells. alpha (character) Two digits fill colors, hexadecimal value 0 255. frame (logical) TRUE grid boundaries drawn black. legend (logical): legend plotted? breaks (numeric) number breakpoints plotted levels. argument passed cut function. inclusive (logical): values beyond limits breaks, represented plot (TRUE) left completely FALSE? discrete (logical): heatmaps symbolize discrete continuous variable? argument affects legend heatmap.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for the trigrid, hexagrid or facelayer classes — plot","text":"function return value.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/plot3d.html","id":null,"dir":"Reference","previous_headings":"","what":"3d plotting of an icosahedral grid, its subset or a data layer — plot3d","title":"3d plotting of an icosahedral grid, its subset or a data layer — plot3d","text":"function built openGL renderer R package rgl. default plotting window size 800x800 pixels. case want override , please use function defaultPar3d=FALSE running par3d(windowRect=<>).","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/plot3d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"3d plotting of an icosahedral grid, its subset or a data layer — plot3d","text":"","code":"plot3d(x,...)  # S3 method for trigrid plot3d(x, type = c(\"l\"), sphere = NULL, add = FALSE, guides = TRUE, ...)  # S3 method for hexagrid plot3d(   x,   type = c(\"l\"),   sphere = NULL,   color = \"gray70\",   add = FALSE,   guides = TRUE,   ... )  # S3 method for facelayer plot3d(x, type = \"f\", frame = TRUE, guides = TRUE, defaultPar3d = TRUE, ...)"},{"path":"https://adamkocsis.github.io/icosa/reference/plot3d.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"3d plotting of an icosahedral grid, its subset or a data layer — plot3d","text":"object class function length 1.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/plot3d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"3d plotting of an icosahedral grid, its subset or a data layer — plot3d","text":"x (trigrid, hexagrid facelayer) Object plotted. type (character) Value specifying part grid plotted call function.  \"v\" plots grid vertex points.  \"e\" draws grid edges. \"f\" draws grid faces. \"c\" draws face centers grid. sphere (numeric) Defaults NULL, adding central white sphere plot. Assigning numeric value draw new sphere given radius, FALSE plot sphere. add (logical) Value indicating whether new plot shall drawn, currently plotted information added active rgl device. guides (logical) Value indicating whether guidelines polar coordinate system shall plotted. ... graphical parameters passed (see plot3d). color (character) hexagrid plotting: value/values passed faces3d function instead col. frame (logical) set TRUE grid line structure plotted. defaultPar3d (logical) Flag indicating whether default settings par3d used (windowRect = c(50, 60, 800, 800), zoom=0.8).","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/plot3d.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"3d plotting of an icosahedral grid, its subset or a data layer — plot3d","text":"function return value.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/plot3d.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"3d plotting of an icosahedral grid, its subset or a data layer — plot3d","text":"","code":"# create a hexagonal grid     g <- hexagrid(c(2,2)) # plot the grid in 3d space #   plot3d(g, col=\"blue\") # make a subset to select faces    subG <- subset(g, c(\"F5\", \"F2\")) # plot the subset defined above #    plot3d(subG, type=\"f\", col=c(\"orange\"), add=TRUE, lwd=1)"},{"path":"https://adamkocsis.github.io/icosa/reference/pos.html","id":null,"dir":"Reference","previous_headings":"","what":"Position of face centers and vertices on a grid — pos","title":"Position of face centers and vertices on a grid — pos","text":"function retrieve position vertex face hexagrid trigrid object.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/pos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Position of face centers and vertices on a grid — pos","text":"","code":"pos(gridObj, names, output = \"polar\")"},{"path":"https://adamkocsis.github.io/icosa/reference/pos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Position of face centers and vertices on a grid — pos","text":"gridObj (hexagrid trigrid) Icosahedral grid object. names (character) Vector names looked . output (character) coordinate system names shown: use \"polar\" longitude-latitude \"cartesian\" XYZ output.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/pos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Position of face centers and vertices on a grid — pos","text":"numeric matrix.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/pos.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Position of face centers and vertices on a grid — pos","text":"Vertex face names can mixed single names argument.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/pos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Position of face centers and vertices on a grid — pos","text":"","code":"g <- trigrid(c(4,4)) pos(g, c(\"F2\", \"P6\", \"dummyname\")) #>           long      lat #> F2         -54 87.86095 #> P6         126 86.03532 #> dummyname   NA       NA"},{"path":"https://adamkocsis.github.io/icosa/reference/resample.html","id":null,"dir":"Reference","previous_headings":"","what":"Resampling of data involving a trigrid or a hexagrid object. — resample","title":"Resampling of data involving a trigrid or a hexagrid object. — resample","text":"function used resolve resample data stored RasterLayers facelayers can fitted can plotted using trigrid hexagrid objects. function applies different resampling algorithms. Currently two implemented methods, one upscaling one downscaling. downscaling method \"average\" tabluate face centers high resolution grid fall coarse resolution cell average . upscaling method \"ebaa\" (edge breakpoint area approximation) estimate areas covered high resolution cells using number edge breakpoints.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/resample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resampling of data involving a trigrid or a hexagrid object. — resample","text":"","code":"resample  # S4 method for Raster,trigrid resample(x, y, method = \"ngb\", na.rm = TRUE)  # S4 method for facelayer,trigrid resample(x, y, method = NULL, res = 5)"},{"path":"https://adamkocsis.github.io/icosa/reference/resample.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Resampling of data involving a trigrid or a hexagrid object. — resample","text":"object class standardGeneric length 1.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/resample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resampling of data involving a trigrid or a hexagrid object. — resample","text":"x (RasterLayer, facelayer) Object resample. y (hexagrid trigrid) Object describing target structure. method (character) name algorithm used resampling. na.rm (logical) face contains missing value, value NA well (FALSE) calculate mean anyway (TRUE). res (numeric) Value indicating precision area estimation upscaling (facelayer-method). case \"ebaa\" method chosen, variable indicate number breaking points edge.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/resample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resampling of data involving a trigrid or a hexagrid object. — resample","text":"named numeric vector.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/resample.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Resampling of data involving a trigrid or a hexagrid object. — resample","text":"method necessary utilize rasterized data icosa package. method currently implemented upscales raster data resolves values trigrid hexagrid values, using averages. case resampling RasterLayers, method argument passed resample function.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/resample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resampling of data involving a trigrid or a hexagrid object. — resample","text":"","code":"# create a grid g <- trigrid(c(4,4)) # create a data layer fl <- facelayer(g) fl@values<-rnorm(length(fl)) # target structure h <- trigrid(4) # resampling res <- resample(fl, h) #> Error in get(x@grid): object 'g' not found fl2<-facelayer(h) fl2@values[] <- res #> Error in eval(expr, envir, enclos): object 'res' not found"},{"path":"https://adamkocsis.github.io/icosa/reference/rotate.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotation of trigrid and hexagrid objects — rotate","title":"Rotation of trigrid and hexagrid objects — rotate","text":"Rotation trigrid hexagrid objects","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/rotate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotation of trigrid and hexagrid objects — rotate","text":"","code":"rotate  # S4 method for trigrid rotate(x, angles = \"random\", pivot = NA)"},{"path":"https://adamkocsis.github.io/icosa/reference/rotate.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Rotation of trigrid and hexagrid objects — rotate","text":"object class standardGeneric length 1.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/rotate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotation of trigrid and hexagrid objects — rotate","text":"x (trigrid hexagrid) Input grid. angles (numeric): vector rotation radians (three values dimension). set \"random\", rotation random (default). pivot (numeric): pivot point rotation, vector xyz coordinates. Defaults NA indicating rotation around center grid.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/rotate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotation of trigrid and hexagrid objects — rotate","text":"Another trigrid hexagrid class object.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/rpsphere.html","id":null,"dir":"Reference","previous_headings":"","what":"Random point generation on the surface of a sphere — rpsphere","title":"Random point generation on the surface of a sphere — rpsphere","text":"function create predefined number points randomly distributed surface sphere given radius.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/rpsphere.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random point generation on the surface of a sphere — rpsphere","text":"","code":"rpsphere(n = 1, output = \"cartesian\", radius = authRadius, origin = c(0, 0, 0))"},{"path":"https://adamkocsis.github.io/icosa/reference/rpsphere.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random point generation on the surface of a sphere — rpsphere","text":"n (numeric) number random points created. output (character) coordinate system new points. Can either  \"cartesian\" XYZ coordiates \"polar\" spherical,  longitude-latitudes coordinates. radius (numeric) radius sphere origin (numeric) center sphere (XYZ coordinates).","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/rpsphere.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random point generation on the surface of a sphere — rpsphere","text":"3-column (XYZ) 2-column (long-lat) numeric matrix.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/rpsphere.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Random point generation on the surface of a sphere — rpsphere","text":"function uses three dimension normal distribution generate points,  projected surface sphere.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/rpsphere.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random point generation on the surface of a sphere — rpsphere","text":"","code":"randomPoints <- rpsphere(2000, output=\"polar\") # observe latitudinal pattern  plot(randomPoints, xlim=c(-180, 180), ylim=c(-90, 90))"},{"path":"https://adamkocsis.github.io/icosa/reference/subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Subsetting an icosahedral grid or data layers organized with them — subset","title":"Subsetting an icosahedral grid or data layers organized with them — subset","text":"generic function used access data either triangular hexagonal grid using names faces, integers logical vectors. function extracts subsets gridlayer depending different criteria.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subsetting an icosahedral grid or data layers organized with them — subset","text":"","code":"subset  # S4 method for trigrid subset(x, i)  # S4 method for hexagrid subset(x, i)  # S4 method for trigrid,ANY,ANY [(x, i)  # S4 method for gridlayer subset(x, i)"},{"path":"https://adamkocsis.github.io/icosa/reference/subset.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Subsetting an icosahedral grid or data layers organized with them — subset","text":"object class standardGeneric length 1.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subsetting an icosahedral grid or data layers organized with them — subset","text":"x (trigrid, hexagrid facelayer) object subsetted. (logical, numeric character) subscript vector, specifying faces used subsetting. subset.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subsetting an icosahedral grid or data layers organized with them — subset","text":"Subset input grid. class original object retained, @skeleton slot contains previous information.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/subset.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Subsetting an icosahedral grid or data layers organized with them — subset","text":"function returns subsets grid pertaining specified faces can used additional operations (e.g. plotting).  subscript vector can either logical, character numeric one. character vector contain names faces, logical subscript  length number faces order faces present faces slot.  numeric vector can either refer indices rownames faces faces slot, surfaces bounded longitude/latitude data. latter case, vector contain element names least one \"lomax\", \"lamax\",  \"lomin\" \"lamin\" strings (lo longitude, la: latitude, min: minimum, max: maximum). case subset around dateline needed larger longitude smaller longitude value needed (e.g. 150° -150°). following methods incorporated function: argument vector integers, interpreted indices. numeric contains either lamin, lamax, lomin lomax names, subsetting done using latitude-longitude coordinates outlined 4 values. Logical subsetting subsetting face names also possible.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/subset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subsetting an icosahedral grid or data layers organized with them — subset","text":"","code":"#create a triangular grid g <- trigrid(c(2,2))  #make a subset pertaining to the faces subG1 <- subset(g, c(\"F1\", \"F33\"))      #additional way of subsetting subG2 <- g[1:15] # selects faces F1 through F15 logicalSub<-sample(c(TRUE,FALSE), nrow(g@faces), replace=TRUE) subG3 <- g[logicalSub]  #plot the subset in 3d space # plot3d(subG3)  # previously mentioned case around the dateline gDateLine<-g[c(lomax=-150, lomin=150)] # plot3d(gDateLine)"},{"path":"https://adamkocsis.github.io/icosa/reference/surfacearea.html","id":null,"dir":"Reference","previous_headings":"","what":"Areas of grid cell surfaces — surfacearea","title":"Areas of grid cell surfaces — surfacearea","text":"function return areas cells specified grid object.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/surfacearea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Areas of grid cell surfaces — surfacearea","text":"","code":"surfacearea(gridObj)  # S4 method for trigrid surfacearea(gridObj)  # S4 method for hexagrid surfacearea(gridObj)"},{"path":"https://adamkocsis.github.io/icosa/reference/surfacearea.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Areas of grid cell surfaces — surfacearea","text":"gridObj (trigrid hexagrid) Object.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/surfacearea.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Areas of grid cell surfaces — surfacearea","text":"named numeric vector, metric given function coordinates radius. \"deg\" output distance degrees, \"rad\" radians.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/surfacearea.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Areas of grid cell surfaces — surfacearea","text":"","code":"g <- trigrid(3) surfaces <- surfacearea(g) surfaces #>      F1      F2      F3      F4      F5      F6      F7      F8      F9     F10  #> 2660073 2660073 2660073 2660073 2660073 3069935 2771086 2771086 3069935 2771086  #>     F11     F12     F13     F14     F15     F16     F17     F18     F19     F20  #> 2771086 3069935 2771086 2771086 3069935 2771086 2771086 3069935 2771086 2771086  #>     F21     F22     F23     F24     F25     F26     F27     F28     F29     F30  #> 3069935 2771086 3069935 2660073 2660073 3069935 2771086 3069935 2660073 2660073  #>     F31     F32     F33     F34     F35     F36     F37     F38     F39     F40  #> 3069935 2771086 3069935 2660073 2660073 3069935 2771086 3069935 2660073 2660073  #>     F41     F42     F43     F44     F45     F46     F47     F48     F49     F50  #> 3069935 2771086 3069935 2660073 2660073 2660073 3069935 2771086 3069935 2660073  #>     F51     F52     F53     F54     F55     F56     F57     F58     F59     F60  #> 2660073 2660073 3069935 2771086 3069935 2660073 2660073 2660073 3069935 2771086  #>     F61     F62     F63     F64     F65     F66     F67     F68     F69     F70  #> 3069935 2660073 2660073 2660073 3069935 2771086 3069935 2660073 2660073 2660073  #>     F71     F72     F73     F74     F75     F76     F77     F78     F79     F80  #> 3069935 2771086 3069935 2660073 2660073 3069935 2771086 2771086 3069935 2771086  #>     F81     F82     F83     F84     F85     F86     F87     F88     F89     F90  #> 2771086 3069935 2771086 2771086 3069935 2771086 2771086 3069935 2771086 2771086  #>     F91     F92     F93     F94     F95     F96     F97     F98     F99    F100  #> 3069935 2771086 2771086 3069935 2771086 2771086 3069935 2771086 2771086 3069935  #>    F101    F102    F103    F104    F105    F106    F107    F108    F109    F110  #> 2771086 2771086 3069935 2771086 2771086 3069935 2771086 3069935 2660073 2660073  #>    F111    F112    F113    F114    F115    F116    F117    F118    F119    F120  #> 2660073 3069935 2771086 3069935 2660073 2660073 2660073 3069935 2771086 3069935  #>    F121    F122    F123    F124    F125    F126    F127    F128    F129    F130  #> 2660073 2660073 2660073 3069935 2771086 3069935 2660073 2660073 2660073 3069935  #>    F131    F132    F133    F134    F135    F136    F137    F138    F139    F140  #> 2771086 3069935 2660073 2660073 2660073 2660073 3069935 2771086 3069935 2660073  #>    F141    F142    F143    F144    F145    F146    F147    F148    F149    F150  #> 2660073 3069935 2771086 3069935 2660073 2660073 3069935 2771086 3069935 2660073  #>    F151    F152    F153    F154    F155    F156    F157    F158    F159    F160  #> 2660073 3069935 2771086 3069935 2660073 2660073 3069935 2771086 3069935 2660073  #>    F161    F162    F163    F164    F165    F166    F167    F168    F169    F170  #> 2771086 2771086 3069935 2771086 2771086 3069935 2771086 2771086 3069935 2771086  #>    F171    F172    F173    F174    F175    F176    F177    F178    F179    F180  #> 2771086 3069935 2771086 2771086 3069935 2660073 2660073 2660073 2660073 2660073"},{"path":"https://adamkocsis.github.io/icosa/reference/surfacecentroid.html","id":null,"dir":"Reference","previous_headings":"","what":"Surface centroid point of a spherical point cloud — surfacecentroid","title":"Surface centroid point of a spherical point cloud — surfacecentroid","text":"function projected place centroid pointset sphere.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/surfacecentroid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Surface centroid point of a spherical point cloud — surfacecentroid","text":"","code":"surfacecentroid(x, ...)  # S4 method for matrix surfacecentroid(x, output = \"polar\", center = c(0, 0, 0), radius = authRadius)  # S4 method for data.frame surfacecentroid(x, ...)  # S4 method for SpatialPoints surfacecentroid(x, ...)"},{"path":"https://adamkocsis.github.io/icosa/reference/surfacecentroid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Surface centroid point of a spherical point cloud — surfacecentroid","text":"x (matrix data.frame) Numeric data, XYZ longitude-latitude coordinates set points. ... Arguments passed matrix-method. output (character) coordinate system output points. Can either \"polar\" longitude-latitude \"cartesian\" XYZ data. center (numeric) center sphere XYZ coordinates (default 0,0,0). radius (numeric) radius circle case input points polar coordinates. Unused XYZ coordinates entered. Defaults authalic radius Earth ca. 6371.007km.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/surfacecentroid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Surface centroid point of a spherical point cloud — surfacecentroid","text":"Either XYZ long-lat numeric vector.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/surfacecentroid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Surface centroid point of a spherical point cloud — surfacecentroid","text":"function implements great circle calculations infer place centroid, makes resource demanding. necessary avoid particual error frequently occurrs methods centroid calculation, namely place centroid right, \topposite hemisphere.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/surfacecentroid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Surface centroid point of a spherical point cloud — surfacecentroid","text":"","code":"# generate some random points allData <- rpsphere(1000) # select only a subset points<-allData[allData[,2]>1500,] # transform to 2d  points2 <- CarToPol(points, norad=TRUE) # the spherical centroid sc <- surfacecentroid(points2, output=\"polar\") sc #>      long       lat  #> 87.178221  4.791846   #3d plot plot(points2, xlim=c(-180, 180), ylim=c(-90, 90)) points(sc[1], sc[2], col=\"red\", cex=5)"},{"path":"https://adamkocsis.github.io/icosa/reference/tessguide.html","id":null,"dir":"Reference","previous_headings":"","what":"Tessellation guide to hexagrid objects — tessguide","title":"Tessellation guide to hexagrid objects — tessguide","text":"table includes basic properties hexagrids described specific tessellation parameters","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/tessguide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tessellation guide to hexagrid objects — tessguide","text":"","code":"tessguide"},{"path":"https://adamkocsis.github.io/icosa/reference/tessguide.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tessellation guide to hexagrid objects — tessguide","text":"data.frame 129 observations 18 variables: total total tessellation grid, number points inserted icosahedron vertices along edge. level1 Level 1 tessellation. level2 Level 2 tessellation - second value tessellation vector. level3 Level 3 tessellation - third value tessellation vector. level4 Level 4 tessellation - four value tessellation vector. faces number faces grid. vertices number vertices grid. meanEdgeLength_deg Mean edge length degrees. sdEdgeLength_deg Standard deviation edge length degrees. meanEdgeLength_km Mean edge length kilometers. sdEdgeLength_km Standard devation edge length kilometers. meanArea_km2 Mean face area square-kilometers. sdArea_km2 Standard deviation face area square-kilometers. time Time compute grid Intel Xeon E-1650 prcessor. time_sp Time compute grid Intel Xeon E-1650 prcessor, 'sp' member. size size grid bytes. size_sp size grid object bytes, 'sp' member. timeLocate_5000 Time locate 5000 points Intel Xeon E-1650 processor seconds.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/translate.html","id":null,"dir":"Reference","previous_headings":"","what":"Translating an icosahedral grid object in 3d Cartesian space — translate","title":"Translating an icosahedral grid object in 3d Cartesian space — translate","text":"function translates coordinates grid object specified 3d vector.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/translate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translating an icosahedral grid object in 3d Cartesian space — translate","text":"","code":"translate(gridObj, vec)  # S4 method for trigrid,numeric translate(gridObj, vec)  # S4 method for hexagrid,numeric translate(gridObj, vec)"},{"path":"https://adamkocsis.github.io/icosa/reference/translate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translating an icosahedral grid object in 3d Cartesian space — translate","text":"gridObj (trigrid hexagrid) Icosahedral grid object. vec (numeric) vector length 3. translation vector.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/translate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translating an icosahedral grid object in 3d Cartesian space — translate","text":"grid structure input, translated coordinates.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/translate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translating an icosahedral grid object in 3d Cartesian space — translate","text":"","code":"# create a grid and plot it g <- trigrid(3) # lines3d(g) # translate the grid to (15000,15000,15000) g2 <- translate(g, c(15000,15000,15000)) # lines3d(g2)"},{"path":"https://adamkocsis.github.io/icosa/reference/trigrid-class.html","id":null,"dir":"Reference","previous_headings":"","what":"A triangular icosahedral grid — trigrid-class","title":"A triangular icosahedral grid — trigrid-class","text":"trigrid() creates triangular grid based    tessellation icosahedron.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/trigrid-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A triangular icosahedral grid — trigrid-class","text":"tessellation (numeric) integer vector tessellation values. number  describes number new edges replacing one original edge. Multiple series tessellations     possible way. total tessellation product tessellation vector.  Higher values result uniform cell sizes, larger number tessellation series increases speed lookup functions. sp (logical) Flag indicating whether SpatialPolygons class representation grid added object grid calculated. set TRUE SpPolygons() function run resolution parameter set 25.   resulting object stored slot @sp. calculation object can substantially increase grid creation time,  default argument value FALSE. SpatialPolygons class representation can added demand running function newsp. graph (logical) Flag indicating whether 'igraph' class representation grid added object grid calculated. argument defaults TRUE option minor performance load grid  constructor function. familiarization object structure, however, setting parameter FALSE might help, invoking str 'igraph' class slot class might flood console. radius (numeric) radius grid. Defaults authalic radius Earth. center (numeric) origin grid reference Cartesian coordinate system. Defaults (0,0,0).","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/trigrid-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A triangular icosahedral grid — trigrid-class","text":"triangular grid object, class trigrid.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/trigrid-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A triangular icosahedral grid — trigrid-class","text":"grid structure functions frame data graining, plotting spatial calculations. Data can stored layers linked grid object. current version  facelayer class implemented, allows user render data cells grid, usually referred faces.  grid 'user interface' made four primary tables: @vertices table coordinates vertices, \tfaceCenters coordinates centers faces, faces edges tables contain vertices form faces edges respectively. tables, faces vertices sorted form spirals go north pole counter-clockwise direction. case grid subsetting performed tables get truncated. finer resolutions, large number spatial elements render calculations resource demanding slow,  therefore hierarchical structure created tessellation procedure retained efficient implementation. data stored list slot @skeleton 0-indexed integer tables Rccp-based functions. $v  stores vertex, $f edge, $e contains edge data plotting calculations. tables original hierarchy based orderings units retained, subsetting, additional vectors used indicate deactivation units. sort meddling @skeleton object lead unexpected behavior.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/trigrid-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"A triangular icosahedral grid — trigrid-class","text":"vertices Matrix vertex XYZ coordinates. faces Matrix verticies forming faces. edges Matrix vertices forming edges. tessellation Contains tessellation vector. orientation Contains grid orientation xyz 3d space, values radian relative (0,1,0) direction. center xyz coordinates grids origin/center. div vector contains number faces single face previous tessellation level decomposed . faceCenters contains xyz coordinates centers faces surface sphere. belts Vector integers indicating belt face belongs . edgeLength length average edge km degrees. graph 'igraph' class graph object. length integer vector length=3. number vertices, edges faces order. proj4string CRS class object indicating model PROJ.4 system r radius grid sp SpatialPolygons representation grid. missing, can created newsp(). skeleton data tables sequential indexing C functions.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/trigrid-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A triangular icosahedral grid — trigrid-class","text":"","code":"# single tessellation value g <- trigrid(c(8)) g #> A/An trigrid object with 642 vertices, 1920 edges and 1280 faces. #> The mean grid edge length is 961.08 km or 8.64 degrees. #> Use plot3d() to see a 3d render. # series of tessellations g1 <- trigrid(c(2,3,4)) g1 #> A/An trigrid object with 5762 vertices, 17280 edges and 11520 faces. #> The mean grid edge length is 320.81 km or 2.89 degrees. #> Use plot3d() to see a 3d render."},{"path":"https://adamkocsis.github.io/icosa/reference/trishape.html","id":null,"dir":"Reference","previous_headings":"","what":"Shape distortions of the triangular faces and subfaces — trishape","title":"Shape distortions of the triangular faces and subfaces — trishape","text":"function return value proportional irregularity triangonal face subface. ratio lengths shortest longest edges.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/trishape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shape distortions of the triangular faces and subfaces — trishape","text":"","code":"trishape(gridObj)  # S4 method for trigrid trishape(gridObj)  # S4 method for hexagrid trishape(gridObj)"},{"path":"https://adamkocsis.github.io/icosa/reference/trishape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shape distortions of the triangular faces and subfaces — trishape","text":"gridObj (trigrid, hexagrid) Object.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/trishape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shape distortions of the triangular faces and subfaces — trishape","text":"named numeric vector, one value every face grid.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/trishape.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shape distortions of the triangular faces and subfaces — trishape","text":"value exactly 1 equilateral triangle, becomes 0 one edges approach 0.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/trishape.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shape distortions of the triangular faces and subfaces — trishape","text":"","code":"g <- trigrid(3) shape <- trishape(g)"},{"path":"https://adamkocsis.github.io/icosa/reference/values.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract and replace values from a gridlayer-derived object (e.g. link{facelayer}). — values","title":"Extract and replace values from a gridlayer-derived object (e.g. link{facelayer}). — values","text":"function get @values slot facelayer object.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract and replace values from a gridlayer-derived object (e.g. link{facelayer}). — values","text":"","code":"values(x,...)  # S4 method for gridlayer values(x)  values(x) <- value  # S4 method for gridlayer values(x) <- value"},{"path":"https://adamkocsis.github.io/icosa/reference/values.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Extract and replace values from a gridlayer-derived object (e.g. link{facelayer}). — values","text":"object class standardGeneric length 1. object class standardGeneric length 1.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract and replace values from a gridlayer-derived object (e.g. link{facelayer}). — values","text":"x (facelayer) Object. value (logical, character numeric) Replacement values. ... Arguments passed class-specific methods. (used.)","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/vertices.html","id":null,"dir":"Reference","previous_headings":"","what":"The vertices of an icosahedral grid object — vertices","title":"The vertices of an icosahedral grid object — vertices","text":"Shorthand function return vertices slot icosahedral grid grid linked facelayer.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/vertices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The vertices of an icosahedral grid object — vertices","text":"","code":"vertices(x, ...)  # S4 method for trigrid vertices(x, output = \"polar\")  # S4 method for facelayer vertices(x, output = \"polar\")"},{"path":"https://adamkocsis.github.io/icosa/reference/vertices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The vertices of an icosahedral grid object — vertices","text":"x (trigrid, hexagrid facelayer) icosahedral grid, linked data object. ... Additional arguments passed class-specific methods. output (character) coordinate system output.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/vertices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The vertices of an icosahedral grid object — vertices","text":"","code":"a <- trigrid(1) vertices(a) #>     long       lat #> P1   -90  90.00000 #> P2  -162  26.56505 #> P3   -90  26.56505 #> P4   -18  26.56505 #> P5    54  26.56505 #> P6   126  26.56505 #> P7   162 -26.56505 #> P8  -126 -26.56505 #> P9   -54 -26.56505 #> P10   18 -26.56505 #> P11   90 -26.56505 #> P12   90 -90.00000"},{"path":"https://adamkocsis.github.io/icosa/reference/vicinity.html","id":null,"dir":"Reference","previous_headings":"","what":"The neighbouring faces of faces in an icosahedral grid — vicinity","title":"The neighbouring faces of faces in an icosahedral grid — vicinity","text":"function return neighbouring faces input faces.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/vicinity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The neighbouring faces of faces in an icosahedral grid — vicinity","text":"","code":"vicinity(gridObj, faces, ...)  # S4 method for trigrid,character vicinity(   gridObj,   faces,   order = 1,   output = \"vector\",   self = TRUE,   namedorder = FALSE,   ... )"},{"path":"https://adamkocsis.github.io/icosa/reference/vicinity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The neighbouring faces of faces in an icosahedral grid — vicinity","text":"gridObj (trigrid hexagrid) Icosahedral grid object. faces (character) vector specifying names faces. ... Arguments passed ego function. order (numeric) Passed ego function, integer value specifying size neighborhood around face. output (character) type output. default \"vector\"  give back names faces adjacent faces specified,  including . \"list\" return list. self (logical) Flag indicating whether input faces output. \"list\" output option, input face names omitted character vectors contain face names related face question. namedorder (logical) orders neighbouring cells reported (TRUE) just names cells (default, FALSE).","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/vicinity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The neighbouring faces of faces in an icosahedral grid — vicinity","text":"character vector list character vectors.","code":""},{"path":"https://adamkocsis.github.io/icosa/reference/vicinity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The neighbouring faces of faces in an icosahedral grid — vicinity","text":"","code":"g <- trigrid(3) ne <- vicinity(g, c(\"F4\", \"F10\")) ne #> [1] \"F10\" \"F11\" \"F18\" \"F28\" \"F3\"  \"F4\"  \"F5\"  \"F9\""}]
