% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grid-lookup.R
\name{locate}
\alias{locate}
\alias{locate,trigrid,matrix-method}
\alias{locate,trigrid,numeric-method}
\alias{locate,trigrid,data.frame-method}
\alias{locate,trigrid,SpatialPoints-method}
\alias{locate,trigrid,SpatialPointsDataFrame-method}
\alias{locate,hexagrid,matrix-method}
\title{Basic lookup function of coordinates on an icosahedral grid}
\usage{
locate(x, y, ...)

\S4method{locate}{trigrid,matrix}(x, y, randomborder = FALSE, output = "ui")

\S4method{locate}{trigrid,numeric}(x, y, ...)

\S4method{locate}{trigrid,data.frame}(x, y, ...)

\S4method{locate}{trigrid,SpatialPoints}(x, y, ...)

\S4method{locate}{trigrid,SpatialPointsDataFrame}(x, y, ...)

\S4method{locate}{hexagrid,matrix}(x, y, output = "ui", randomborder = FALSE, forceNA = FALSE)
}
\arguments{
\item{x}{a trigrid or hexagrid class object.}

\item{y}{Coordinates of individual points. Can be either a two-dimensional 
matrix of long-lat coordinates, a three-dimensional matrix of XYZ coordinates, 
or a set of points with class 'SpatialPoints'.}

\item{...}{arguments passed to class specific methods.}

\item{randomborder}{Logical value. Defaults to FALSE. If TRUE, then the points
falling on vertices and edges will be randomly assigned, otherwise they will be kept as NAs.}

\item{output}{Character value either "ui" or "skeleton". ui returns the face 
names used in the user interface, while "skeleton" returns their 
indices used in back-end procedures.}

\item{forceNA}{logical value, suppressing the recursive lookup of points falling on subface boundaries.}
}
\value{
The function returns the cell names where the input coordinates fall.
}
\description{
Basic lookup function of coordinates on an icosahedral grid

locate-method of trigrid-numeric

locate-method of trigrid - data.frame

locate method of trigrid - SpatialPoints

trigrid-SPDF method
}
\examples{
# create a grid 
g <- trigrid(4)
# some random points
randomPoints<-rpsphere(4, output="polar")
# cells
locate(g, randomPoints)
}
